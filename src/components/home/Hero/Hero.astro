---
import type { TemplateConfig } from "@utils/configType";
import type { TranslationObject } from "@utils/serverI18n";
import Wave from "./svg/wave.astro";
import CtaButton from "@components/ui/CtaButton.astro";

interface Props {
  config: TemplateConfig;
  translations: TranslationObject;
  currentLang?: string;
}

const {
  config,
  translations,
  currentLang = "en",
} = Astro.props as Props;

const {
  googlePlayLink,
  appStoreLink,
  home: { hero, partners },
} = config;

if (!hero) {
  return null;
}

const supportedLanguages = ["en", "es", "tl", "vi", "zh-CN"];
const langKey = supportedLanguages.includes(currentLang) ? currentLang : currentLang.split("-")[0] || "en";
const languageFolder = supportedLanguages.includes(langKey) ? langKey : "en";

const screenshotAlts: Record<string, string> = {
  "dashboard": translations.alt.screenshots.dashboard,
  "modify-trip": translations.alt.screenshots.modifyTrip,
  "trips": translations.alt.screenshots.trips,
};

const primaryScreenshot = hero.screenshots?.[0];
const screenshotBasePath = primaryScreenshot
  ? `/screenshots/${languageFolder}/${primaryScreenshot}`
  : undefined;

const buildSrcSet = (base: string) =>
  `${base}-250.webp 250w, ${base}-298.webp 298w, ${base}-311.webp 311w, ${base}-327.webp 327w`;

let headlineSegments: { before?: string; highlight?: string; after?: string } = {};
if (hero.headlineMark) {
  const words = translations.hero.headline.split(" ");
  const [start, end] = hero.headlineMark;
  headlineSegments = {
    before: words.slice(0, start).join(" "),
    highlight: words.slice(start, end).join(" "),
    after: words.slice(end).join(" "),
  };
}
---

<section id={hero.id} class="relative pb-8 md:pb-4" aria-label="Hero section">
  <div class="max-w-screen-lg mx-auto pt-24 pb-4 px-4 md:pt-32 md:pb-16">
    <div class="flex flex-col md:flex-row">
      <div class="flex flex-1 items-center md:items-start md:h-[300vh]">
        <div class="static top-40 flex flex-col prose justify-center py-8 md:sticky md:h-[548px]">
          {hero.rewards?.length ? (
            <div class="flex flex-col gap-2 my-4 3xs:flex-row">
              {hero.rewards.map((reward) => (
                <div class="flex items-center self-center h-8 md:h-12">
                  <img src="/misc/wreath-left.webp" width="48" height="48" alt="" loading="lazy" class="h-full" />
                  <p class="text-xs text-gray-500 whitespace-pre text-center">{reward}</p>
                  <img src="/misc/wreath-right.webp" width="48" height="48" alt="" loading="lazy" class="h-full" />
                </div>
              ))}
            </div>
          ) : null}

          <h1 class="mt-0 mb-4 text-4xl font-semibold md:text-6xl text-balance">
            {headlineSegments.before ? (
              <>
                {headlineSegments.before && <span>{headlineSegments.before} </span>}
                {headlineSegments.highlight && (
                  <span class="inline-block relative">
                    <span>{headlineSegments.highlight}</span>
                    <span class="w-0 h-full top-0 left-0 z-[-1] absolute inline-block bg-gradient-to-r from-primary/80 to-secondary/40 rounded-lg" style="width: 100%; height: 100%;"></span>
                  </span>
                )}
                {headlineSegments.after && <span> {headlineSegments.after}</span>}
              </>
            ) : (
              translations.hero.headline
            )}
          </h1>

          {translations.hero.subtitle && (
            <p class="whitespace-pre-wrap text-left m-0 my-1 max-w-md md:text-lg md:max-w-lg">
              {translations.hero.subtitle}
            </p>
          )}

          {(googlePlayLink || appStoreLink) && (
            <ul class="list-none flex gap-4 m-0 p-0">
              {googlePlayLink && (
                <li class="m-0 p-0">
                  <a href={googlePlayLink}>
                    <img
                      class="h-14"
                      width="156"
                      height="56"
                      loading="lazy"
                      alt={translations.alt.stores.googlePlayLogo}
                      src={`/stores/${languageFolder}/google-play.svg`}
                    />
                  </a>
                </li>
              )}
              {appStoreLink && (
                <li class="m-0 my-8 p-0">
                  <CtaButton
                    variant="filled"
                    href={appStoreLink}
                    text="Download"
                    showIcon={true}
                    target="_blank"
                    rel="noopener noreferrer"
                  />
                </li>
              )}
            </ul>
          )}

          {hero.usersDescription && (
            <div class="not-prose flex items-center gap-2 my-1">
              <ul class="avatar-group -space-x-4">
                {Array.from({ length: 5 }).map((_, index) => (
                  <li class="avatar" aria-hidden="true">
                    <div class="w-8">
                      <img
                        src={`/avatars/${index + 1}.webp`}
                        alt={`${translations.alt.misc.appUser} ${index + 1}`}
                        width="32"
                        height="32"
                        loading="lazy"
                      />
                    </div>
                  </li>
                ))}
              </ul>
              <p class="text-sm">{translations.hero.usersDescription}</p>
            </div>
          )}
        </div>
      </div>

      <div class="min-h-[300vh] z-[-1]">
        <div class="flex justify-center sticky top-28 md:top-40">
          <div class="absolute inset-0 -z-10 hidden max-w-[520px] rounded-full bg-gradient-to-br from-primary/20 to-secondary/20 blur-3xl md:block" aria-hidden="true"></div>
          {screenshotBasePath ? (
            <div class="relative h-[548px] 2xs:h-[720px] sm:h-[648px] md:h-[548px] rounded-[3rem]">
              <div class="absolute top-2.5 left-3 w-[calc(100%-24px)] h-[calc(100%-16px)] rounded-[1rem] 2xs:rounded-[2rem] overflow-hidden">
                <img
                  srcset={buildSrcSet(`${screenshotBasePath}`)}
                  sizes="(max-width: 768px) 240px, 260px"
                  src={`${screenshotBasePath}-327.webp`}
                  alt={screenshotAlts[primaryScreenshot!] ?? translations.alt.misc.appScreenshot}
                  loading="eager"
                  decoding="async"
                  class="h-full w-full object-cover"
                />
              </div>
              <img
                srcset="/misc/iphone-frame-sm.webp 252w, /misc/iphone-frame-md.webp 331w, /misc/iphone-frame-lg.webp 298w, /misc/iphone-frame-xl.webp 331w"
                sizes="(max-width: 400px) 252px, (max-width: 768px) 331px, 298px"
                src="/misc/iphone-frame-md.webp"
                alt={translations.alt.misc.iphoneFrame}
                loading="lazy"
                decoding="async"
                class="relative z-10 h-full"
              />
            </div>
          ) : null}
        </div>
      </div>
    </div>
  </div>

  {partners && <Wave class="absolute -bottom-1 left-0 right-0 -z-10" aria-hidden="true" />}
</section>
