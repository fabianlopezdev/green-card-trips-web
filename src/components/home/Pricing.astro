---
import type { TemplateConfig } from "@utils/configType";
import type { TranslationObject } from "@utils/serverI18n";
import CtaButton from "@components/ui/CtaButton.astro";

interface Props {
  config: TemplateConfig;
  translations: TranslationObject;
  currentLang?: string;
}

const { config, translations } = Astro.props as Props;

const {
  home: { pricing },
  appStoreLink,
} = config;

if (!pricing) {
  return null;
}

const planImages = [
  "/misc/wallet-front-color.webp",
  "/misc/money-front-color.webp",
  "/misc/locker-front-color.webp",
];

const planImageAltTexts = [
  translations.alt.pricing.wallet,
  translations.alt.pricing.money,
  translations.alt.pricing.locker,
];
---

<section
  id={pricing.id}
  class="mx-auto max-w-screen-lg px-4 py-12"
  aria-label={translations.aria.sections.pricing}
>
  <div
    class="prose prose-lg mb-12 flex max-w-none flex-col items-center text-center"
  >
    <h2 class="mb-2 font-normal">{translations.pricing.title}</h2>
    <div class="h-2 w-[200px] overflow-hidden rounded-full bg-gradient-to-r from-primary to-secondary md:w-[350px]">
      <span class="block h-full w-full bg-white/20"></span>
    </div>
    <p class="max-w-lg text-base text-base-content/70">
      {translations.pricing.subtitle}
    </p>
  </div>

  <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
    {
      pricing.plans?.map((plan, index) => (
        <article class={`relative rounded-3xl bg-base-200/40 dark:bg-neutral p-6 lg:col-start-2`}>
          <header class="flex flex-col items-center gap-4 text-center">
            <div class="flex h-28 w-28 items-center justify-center rounded-full bg-primary/10">
              <img
                src={planImages[index % planImages.length]}
                width="96"
                height="96"
                loading="lazy"
                alt={planImageAltTexts[index % planImageAltTexts.length]}
                class="h-20 w-20 object-contain"
              />
            </div>
            <div>
              <p class="mt-2 text-3xl font-bold">
                {plan.price ?? translations.pricing.price}
              </p>
            </div>
          </header>
          <ul class="mt-6 space-y-2 text-base text-base-content/80">
            {translations.pricing.features.map(
              (feature: string) => (
                <li class="flex items-start gap-2 px-3 py-2">
                  <svg class="mt-1 h-5 w-5 flex-shrink-0 text-base-content" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                  <span>{feature}</span>
                </li>
              ),
            )}
          </ul>
          <div class="mt-6 flex justify-center">
            <CtaButton
              variant="filled"
              href={appStoreLink}
              text={translations.pricing.cta}
              showIcon={true}
              target="_blank"
              rel="noopener noreferrer"
              translations={translations}
            />
          </div>
        </article>
      ))
    }
  </div>
</section>
