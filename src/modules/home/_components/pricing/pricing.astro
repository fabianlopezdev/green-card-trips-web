---
import type { TemplateConfig } from "../../../../utils/configType";
import type { TranslationObject } from "../../../../utils/serverI18n";

interface Props {
  config: TemplateConfig;
  translations: TranslationObject;
  currentLang?: string;
}

const { config, translations } = Astro.props as Props;

const {
  home: { pricing },
} = config;

if (!pricing) {
  return null;
}

const planImages = [
  "/misc/wallet-front-color.webp",
  "/misc/money-front-color.webp",
  "/misc/locker-front-color.webp",
];

const planImageAltTexts = [
  translations.alt.pricing.wallet,
  translations.alt.pricing.money,
  translations.alt.pricing.locker,
];
---

<section
  id={pricing.id}
  class="mx-auto max-w-screen-lg px-4 py-12"
  aria-label="Pricing plans"
>
  <div class="prose prose-lg mb-12 flex max-w-none flex-col items-center text-center">
    <h2 class="mb-2 font-normal">{translations.pricing.title}</h2>
    <p class="max-w-lg text-base text-base-content/70">{translations.pricing.subtitle}</p>
  </div>

  <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
    {pricing.plans?.map((plan, index) => (
      <article class={`relative rounded-3xl border border-primary/20 bg-base-100 p-6 shadow-md ${plan.featured ? "ring-2 ring-secondary" : ""}`}>
        {plan.featured && (
          <span class="absolute -top-3 right-6 rounded-full bg-secondary px-3 py-1 text-xs font-semibold text-secondary-content">
            {translations.pricing.cta}
          </span>
        )}
        <div class="flex flex-col items-center gap-4 text-center">
          <div class="flex h-28 w-28 items-center justify-center rounded-full bg-primary/10">
            <img
              src={planImages[index % planImages.length]}
              width="96"
              height="96"
              loading="lazy"
              alt={planImageAltTexts[index % planImageAltTexts.length]}
              class="h-20 w-20 object-contain"
            />
          </div>
          <div>
            <h3 class="text-xl font-semibold text-base-content">{plan.title}</h3>
            <p class="mt-2 text-3xl font-bold">{plan.price ?? translations.pricing.price}</p>
          </div>
        </div>
        <ul class="mt-6 space-y-2 text-sm text-base-content/80">
          {(plan.rows ?? translations.pricing.features).map((feature: string) => (
            <li class="rounded-md bg-base-200/60 px-3 py-2">{feature}</li>
          ))}
        </ul>
        {pricing.actionText && (
          <div class="mt-6 flex justify-center">
            <a class="btn btn-primary w-full" href="/app">
              {translations.pricing.cta}
            </a>
          </div>
        )}
      </article>
    ))}
  </div>
</section>
